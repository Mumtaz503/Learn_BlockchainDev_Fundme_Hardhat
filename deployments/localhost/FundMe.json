{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "PriceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x781d3c76fa807f93ec6bd644360651bfe8ee25bd6911d651e99e97774b6fa609",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "906862",
    "logsBloom": "0x
    "blockHash": "0xe2883a8cd95a05b21a6d1f1f86fa7b6bc91ea0ea73967a983b9e1ced92e766d8",
    "transactionHash": "0x781d3c76fa807f93ec6bd644360651bfe8ee25bd6911d651e99e97774b6fa609",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "906862",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "2792c32f3b2479550aea31ad55f46cc0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"PriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    //1) Create a variable of AggregatorV3Interface object type\\n    AggregatorV3Interface public PriceFeed;\\n    \\n    //2) Pass it in the constructor of your contract to access the data of address for price feed contract\\n    constructor(address PriceFeedAddress) {\\n        i_owner = msg.sender;\\n\\n        //3) Access the price feed contract address in the constructor (Modularization)\\n        PriceFeed = AggregatorV3Interface(PriceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n\\n        //8) Get Conversion rate now has two parameters You can Add PriceFeed variable in here\\n        require(msg.value.getConversionRate(PriceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        \\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        //9) ETH/USD price feed address of Sepolia Network accessed directly from AggregatorV3Interface\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(PriceFeed);\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\",\"keccak256\":\"0xa401598ba40486cb11b8b6a00ccf798f5e36b5909a6d643a86a15ea840d2006c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        //4) Pass the AggregatorV3Interface object in the function to access contract address\\n        AggregatorV3Interface PriceFeed\\n    ) internal view returns (uint256) {\\n        // // Sepolia ETH / USD Address\\n        // // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n\\n        //5) Access the round data function from AggregatorV3Interface\\n        (, int256 answer, , , ) = PriceFeed.latestRoundData();\\n\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        //6) Pass the AggregatorV3Interface object in the conversionrate function\\n        AggregatorV3Interface PriceFeed\\n    ) internal view returns (uint256) {\\n        //7) Access the Get Price Function from The AggregatorV3Interface Interface\\n        uint256 ethPrice = getPrice(PriceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xe1ee24e14e2ad3078889338946d6215fa8695a739c6b2030bac5e3fbfa3a5773\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000ff638038062000ff68339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610e9a806200015c6000396000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b806308b7fa31146100985780630d8e6e2c146100c35780633ccfd60b146100ee5780633e47d6f3146101055761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba919061089b565b60405180910390f35b3480156100cf57600080fd5b506100d861033f565b6040516100e591906108cf565b60405180910390f35b3480156100fa57600080fd5b506101036103dc565b005b34801561011157600080fd5b5061012c6004803603810190610127919061092d565b61061e565b60405161013991906108cf565b60405180910390f35b34801561014e57600080fd5b50610157610636565b60405161016491906108cf565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c610643565b6040516101999190610969565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109b0565b610669565b6040516101d69190610969565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a890919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a3a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a89565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610ad2565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610463576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561050e5760006001828154811061048957610488610aff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061050690610b2e565b915050610466565b50600067ffffffffffffffff81111561052a57610529610b76565b5b6040519080825280602002602001820160405280156105585781602001602082028036833780820191505090505b506001908051906020019061056e929190610775565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161059590610bd6565b60006040518083038185875af1925050503d80600081146105d2576040519150601f19603f3d011682016040523d82523d6000602084013e6105d7565b606091505b505090508061061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061290610c37565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061067957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106b4836106e4565b90506000670de0b6b3a764000085836106cd9190610c57565b6106d79190610cc8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610732573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107569190610d71565b5050509150506402540be4008161076d9190610dec565b915050919050565b8280548282559060005260206000209081019282156107ee579160200282015b828111156107ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610795565b5b5090506107fb91906107ff565b5090565b5b80821115610818576000816000905550600101610800565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061086161085c6108578461081c565b61083c565b61081c565b9050919050565b600061087382610846565b9050919050565b600061088582610868565b9050919050565b6108958161087a565b82525050565b60006020820190506108b0600083018461088c565b92915050565b6000819050919050565b6108c9816108b6565b82525050565b60006020820190506108e460008301846108c0565b92915050565b600080fd5b60006108fa8261081c565b9050919050565b61090a816108ef565b811461091557600080fd5b50565b60008135905061092781610901565b92915050565b600060208284031215610943576109426108ea565b5b600061095184828501610918565b91505092915050565b610963816108ef565b82525050565b600060208201905061097e600083018461095a565b92915050565b61098d816108b6565b811461099857600080fd5b50565b6000813590506109aa81610984565b92915050565b6000602082840312156109c6576109c56108ea565b5b60006109d48482850161099b565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a24601b836109dd565b9150610a2f826109ee565b602082019050919050565b60006020820190508181036000830152610a5381610a17565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a94826108b6565b9150610a9f836108b6565b9250828201905080821115610ab757610ab6610a5a565b5b92915050565b600081519050610acc81610984565b92915050565b600060208284031215610ae857610ae76108ea565b5b6000610af684828501610abd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b39826108b6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b6b57610b6a610a5a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bc0600083610ba5565b9150610bcb82610bb0565b600082019050919050565b6000610be182610bb3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c21600b836109dd565b9150610c2c82610beb565b602082019050919050565b60006020820190508181036000830152610c5081610c14565b9050919050565b6000610c62826108b6565b9150610c6d836108b6565b9250828202610c7b816108b6565b91508282048414831517610c9257610c91610a5a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cd3826108b6565b9150610cde836108b6565b925082610cee57610ced610c99565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d1881610cf9565b8114610d2357600080fd5b50565b600081519050610d3581610d0f565b92915050565b6000819050919050565b610d4e81610d3b565b8114610d5957600080fd5b50565b600081519050610d6b81610d45565b92915050565b600080600080600060a08688031215610d8d57610d8c6108ea565b5b6000610d9b88828901610d26565b9550506020610dac88828901610d5c565b9450506040610dbd88828901610abd565b9350506060610dce88828901610abd565b9250506080610ddf88828901610d26565b9150509295509295909350565b6000610df782610d3b565b9150610e0283610d3b565b9250828202610e1081610d3b565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610e4857610e47610a5a565b5b8282058414831517610e5d57610e5c610a5a565b5b509291505056fea2646970667358221220952d7eea3273f3ea96eb0d73de31eee1883b7d7df53d15c86a8e923b5fe9a23964736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b806308b7fa31146100985780630d8e6e2c146100c35780633ccfd60b146100ee5780633e47d6f3146101055761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba919061089b565b60405180910390f35b3480156100cf57600080fd5b506100d861033f565b6040516100e591906108cf565b60405180910390f35b3480156100fa57600080fd5b506101036103dc565b005b34801561011157600080fd5b5061012c6004803603810190610127919061092d565b61061e565b60405161013991906108cf565b60405180910390f35b34801561014e57600080fd5b50610157610636565b60405161016491906108cf565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c610643565b6040516101999190610969565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109b0565b610669565b6040516101d69190610969565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a890919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a3a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a89565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610ad2565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610463576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561050e5760006001828154811061048957610488610aff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061050690610b2e565b915050610466565b50600067ffffffffffffffff81111561052a57610529610b76565b5b6040519080825280602002602001820160405280156105585781602001602082028036833780820191505090505b506001908051906020019061056e929190610775565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161059590610bd6565b60006040518083038185875af1925050503d80600081146105d2576040519150601f19603f3d011682016040523d82523d6000602084013e6105d7565b606091505b505090508061061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061290610c37565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061067957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106b4836106e4565b90506000670de0b6b3a764000085836106cd9190610c57565b6106d79190610cc8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610732573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107569190610d71565b5050509150506402540be4008161076d9190610dec565b915050919050565b8280548282559060005260206000209081019282156107ee579160200282015b828111156107ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610795565b5b5090506107fb91906107ff565b5090565b5b80821115610818576000816000905550600101610800565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061086161085c6108578461081c565b61083c565b61081c565b9050919050565b600061087382610846565b9050919050565b600061088582610868565b9050919050565b6108958161087a565b82525050565b60006020820190506108b0600083018461088c565b92915050565b6000819050919050565b6108c9816108b6565b82525050565b60006020820190506108e460008301846108c0565b92915050565b600080fd5b60006108fa8261081c565b9050919050565b61090a816108ef565b811461091557600080fd5b50565b60008135905061092781610901565b92915050565b600060208284031215610943576109426108ea565b5b600061095184828501610918565b91505092915050565b610963816108ef565b82525050565b600060208201905061097e600083018461095a565b92915050565b61098d816108b6565b811461099857600080fd5b50565b6000813590506109aa81610984565b92915050565b6000602082840312156109c6576109c56108ea565b5b60006109d48482850161099b565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a24601b836109dd565b9150610a2f826109ee565b602082019050919050565b60006020820190508181036000830152610a5381610a17565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a94826108b6565b9150610a9f836108b6565b9250828201905080821115610ab757610ab6610a5a565b5b92915050565b600081519050610acc81610984565b92915050565b600060208284031215610ae857610ae76108ea565b5b6000610af684828501610abd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b39826108b6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b6b57610b6a610a5a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bc0600083610ba5565b9150610bcb82610bb0565b600082019050919050565b6000610be182610bb3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c21600b836109dd565b9150610c2c82610beb565b602082019050919050565b60006020820190508181036000830152610c5081610c14565b9050919050565b6000610c62826108b6565b9150610c6d836108b6565b9250828202610c7b816108b6565b91508282048414831517610c9257610c91610a5a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cd3826108b6565b9150610cde836108b6565b925082610cee57610ced610c99565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d1881610cf9565b8114610d2357600080fd5b50565b600081519050610d3581610d0f565b92915050565b6000819050919050565b610d4e81610d3b565b8114610d5957600080fd5b50565b600081519050610d6b81610d45565b92915050565b600080600080600060a08688031215610d8d57610d8c6108ea565b5b6000610d9b88828901610d26565b9550506020610dac88828901610d5c565b9450506040610dbd88828901610abd565b9350506060610dce88828901610abd565b9250506080610ddf88828901610d26565b9150509295509295909350565b6000610df782610d3b565b9150610e0283610d3b565b9250828202610e1081610d3b565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610e4857610e47610a5a565b5b8282058414831517610e5d57610e5c610a5a565b5b509291505056fea2646970667358221220952d7eea3273f3ea96eb0d73de31eee1883b7d7df53d15c86a8e923b5fe9a23964736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "PriceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}